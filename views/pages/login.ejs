<div class="login-page">
  <div class="container mt-5">
    <div class="login-container">
      <h1 class="brand-name">Fresh<span>Share</span></h1>
      <p class="text-center text-muted mb-4">
        Welcome back! Please login to your account.
      </p>

      <!-- Error message container -->
      <div id="errorMessage" class="alert alert-danger mb-4 d-none"></div>

      <form id="loginForm">
        <div class="mb-3">
          <label for="username" class="form-label">Username</label>
          <div class="input-group">
            <span class="input-group-text">
              <i class="fas fa-user"></i>
            </span>
            <input
              type="text"
              class="form-control"
              id="username"
              autocomplete="username"
              required
              placeholder="Enter your username"
            />
          </div>
        </div>
        <div class="mb-4">
          <label for="password" class="form-label">Password</label>
          <div class="input-group">
            <span class="input-group-text">
              <i class="fas fa-lock"></i>
            </span>
            <input
              type="password"
              class="form-control"
              id="password"
              autocomplete="current-password"
              required
              placeholder="Enter your password"
            />
          </div>
        </div>
        <button type="submit" class="btn btn-primary w-100">
          <i class="fas fa-sign-in-alt me-2"></i>Login
        </button>

        <div class="text-center mt-3">
          <p class="mb-0">
            Don't have an account? <a href="<%= baseUrl %>/signup">Sign up</a>
          </p>
        </div>
      </form>
    </div>
  </div>
</div>

<%- contentFor('script') %>
<script src="<%= baseUrl %>/js/auth.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', async function () {
    // Check if we should redirect to a specific page after login
    const urlParams = new URLSearchParams(window.location.search);
    const redirectUrl = urlParams.get('redirect');
    const errorMsg = urlParams.get('error');

    // Display error message if present in URL
    if (errorMsg) {
      const errorMessage = document.getElementById('errorMessage');
      errorMessage.textContent = decodeURIComponent(errorMsg);
      errorMessage.classList.remove('d-none');
    }

    // If user is already logged in, redirect to dashboard or the redirect URL
    // Use server-side check since JWT cookie is HttpOnly
    try {
      const profileResp = await fetch('<%= baseUrl %>/api/auth/profile', {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'same-origin',
      });
      if (profileResp.ok) {
        console.log(
          'User already logged in, redirecting to:',
          redirectUrl || '<%= baseUrl %>/dashboard'
        );
        window.location.href = redirectUrl || '<%= baseUrl %>/dashboard';
        return;
      }
    } catch (e) {
      // ignore; treat as not logged in
    }

    const loginForm = document.getElementById('loginForm');
    const errorMessage = document.getElementById('errorMessage');

    loginForm.addEventListener('submit', async function (e) {
      e.preventDefault();

      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;

      try {
        // Show loading state
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.innerHTML;
        submitBtn.innerHTML =
          '<i class="fas fa-spinner fa-spin"></i> Logging in...';
        submitBtn.disabled = true;

        console.log('Sending login request...');
        const response = await fetch('<%= baseUrl %>/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          credentials: 'same-origin', // Include cookies in the request
          body: JSON.stringify({ username, password }),
        });

        console.log('Login response status:', response.status);
        const data = await response.json();
        console.log('Login response data:', data);

        if (response.ok) {
          // Show success message
          errorMessage.textContent = 'Login successful! Redirecting...';
          errorMessage.className = 'alert alert-success mb-4';
          errorMessage.classList.remove('d-none');

          // Redirect to dashboard or the redirect URL (cookie is set by server)
          console.log(
            'Login successful, redirecting to:',
            redirectUrl || '<%= baseUrl %>/dashboard'
          );
          setTimeout(() => {
            window.location.href = redirectUrl || '<%= baseUrl %>/dashboard';
          }, 1000);
        } else {
          // Show error message
          errorMessage.textContent =
            data.message || 'Login failed. Please check your credentials.';
          errorMessage.classList.remove('d-none');

          // Reset button
          submitBtn.innerHTML = originalBtnText;
          submitBtn.disabled = false;
        }
      } catch (error) {
        console.error('Login error:', error);
        errorMessage.textContent =
          'An error occurred during login. Please try again.';
        errorMessage.classList.remove('d-none');

        // Reset button
        const submitBtn = this.querySelector('button[type="submit"]');
        submitBtn.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>Login';
        submitBtn.disabled = false;
      }
    });
  });
</script>
